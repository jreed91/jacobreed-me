<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stream-Of-Consciousness</title>
    <description>A daily stream of content from the mind of Jacob Reed.
</description>
    <link>jacobreed.me/</link>
    <atom:link href="jacobreed.me/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 17 Jan 2016 10:54:00 -0600</pubDate>
    <lastBuildDate>Sun, 17 Jan 2016 10:54:00 -0600</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Create a simple pager utilizing AngularJS dir-paginate and ASP.NET 5 API</title>
        <description>&lt;p&gt;Today I’m going to walk you through how to build a simple server-side pager utilizing AngularJS, C#, and ASP.NET 5 on OS X. &lt;/p&gt;

&lt;h2 id=&quot;getting-set-up&quot;&gt;Getting Set Up&lt;/h2&gt;

&lt;p&gt;I built this application utilizing the new cross-platform ASP.NET 5 on OS X. To get started we will need to set up your development environment on OS X.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Follow the set up instructions for OS X &lt;a href=&quot;https://docs.asp.net/en/latest/getting-started/installing-on-mac.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once you have everything installed we’re going to start scaffolding our project. Navigate to the folder you want the files to live and &lt;a href=&quot;https://docs.asp.net/en/latest/client-side/yeoman.html&quot;&gt;follow these instructions&lt;/a&gt; on how to set up yeoman. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;download-our-dependencies&quot;&gt;Download Our Dependencies&lt;/h2&gt;

&lt;p&gt;You should now have a simple ASP.NET website structure set up. Now we need to get Angular.JS set up and other dependencies installed.&lt;/p&gt;

&lt;p&gt;Make sure you have bower installed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g bower
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my template I was missing a .bowerrc file, add this to the root of your directory and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  	&quot;directory&quot;: &quot;wwwroot/lib&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will help make sure that all your bower dependencies are loading into the lib folder. &lt;/p&gt;

&lt;p&gt;Now we can start adding our dependencies to the bower file.&lt;/p&gt;

&lt;p&gt;Add this to our bower.json:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;name&quot;: &quot;ASP.NET&quot;,
    &quot;private&quot;: true,
    &quot;dependencies&quot;: {
	    &quot;angular&quot;: &quot;1.4.8&quot;,
	    &quot;bootstrap&quot;: &quot;3.3.5&quot;,
	    &quot;jquery&quot;: &quot;2.1.4&quot;,
	    &quot;jquery-validation&quot;: &quot;1.14.0&quot;,
	    &quot;jquery-validation-unobtrusive&quot;: &quot;3.2.4&quot;,
	    &quot;angularUtils-pagination&quot;: &quot;*&quot;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After saving, open up terminal in your directory and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bower update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You now see all of our dependencies loaded into the lib folder.&lt;/p&gt;

&lt;h2 id=&quot;create-our-api&quot;&gt;Create Our API&lt;/h2&gt;

&lt;p&gt;We can now start building our API. First start let’s build our Model. In the Models folder create a new class named Item.cs. Add the attributes you want to track, for simplicity here is mine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace angularjs_aspnet_paginate.Models
{
    public class Item
    {
        public int Id { get; set; }

        public string Name { get; set; }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also need to create a model for the data we will return. Call this class PagedCollection.cs and add the following:&lt;/p&gt;

&lt;p&gt;using System.Linq;
using System.Collections.Generic;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace angularjs_aspnet_paginate.Models
{
    public class PagedCollection&amp;lt;T&amp;gt;
    {
        public int Page { get; set; }

        public int Count
        {
            get
            {
                return (null != this.Items) ? this.Items.Count() : 0;
            }
        }

        public int TotalPages { get; set; }
        public int TotalCount { get; set; }

        public IEnumerable&amp;lt;T&amp;gt; Items { get; set; }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the data we will return from our API to our client. It includes the pagee number, a count of number of items, a count of total pages, total count of items overall, and the items. &lt;/p&gt;

&lt;p&gt;Now that we have our models we can build our API. Create a new Controller: ItemsController.cs. Here is the relevant code for returning Items:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // GET: api/paginate
[HttpGet]
public PagedCollection&amp;lt;Item&amp;gt; Get(int? page, int? pageSize)
{
    var currPage = page.GetValueOrDefault(0);
    currPage = currPage - 1;
    var currPageSize = pageSize.GetValueOrDefault(10);

    var paged = _items.Skip(currPage * currPageSize)
                        .Take(currPageSize)
                        .ToArray();

    var totalCount = _items.Count();

    return new PagedCollection&amp;lt;Item&amp;gt;()
    {
        Page = currPage,
        TotalCount = totalCount,
        TotalPages = (int)Math.Ceiling((decimal)totalCount / currPageSize),
        Items = paged
    };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This api takes a GET request with the current page and the page size (i.e. how many items should be displayed). We then use a linq query to get the data from _items based on the current page number and page size:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;static ItemsController() {
	_items = Enumerable.Range(1, 100)
    	.Select(i =&amp;gt; new Item()
        {
            Id = i,
            Name = &quot;Item &quot; + i.ToString()
        }).ToArray();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We get our total count of items and return the PagedCollection model. After building out this structure open up terminal and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dnx web
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you go to http://localhost:5000/api/items?page=1&amp;amp;pageSize=1, you should now be able to see the data being returned.&lt;/p&gt;

&lt;h2 id=&quot;start-building-the-front-end&quot;&gt;Start Building the Front-End&lt;/h2&gt;

&lt;p&gt;Now that we have our API built we can start building our front-end code. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new folder names Views&lt;/li&gt;
  &lt;li&gt;Add two files _ViewStart.cshtml and _ViewImports.cshtml&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;See the following code for these files:&lt;/p&gt;

&lt;p&gt;_ViewStart.cshtml:
	@{
	    Layout = “_Layout”;
	}&lt;/p&gt;

&lt;p&gt;_ViewImports.cshtml:
	@using angularjs_aspnet_paginate
	@using angularjs_aspnet_paginate.Models&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add another folder with Views called Shared&lt;/li&gt;
  &lt;li&gt;Add a file named _Layout.cshtml&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the file that will load all of your client side html after _ViewStart.cshtml is called. I grabbed most of the code from Microsoft’s example &lt;a href=&quot;https://github.com/aspnet/Docs/blob/master/aspnet/client-side/angular/sample/AngularSample/src/AngularSample/Views/Shared/_Layout.cshtml&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add another folder names Home inside Views&lt;/li&gt;
  &lt;li&gt;Add a file named Index.cshtml. This is the file that will load once RenderBody() is called.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In order for all of this to work we need to add a HomeController to our ASP.NET code. Add HomeController.cs  under the Controllers folder:&lt;/p&gt;

    &lt;p&gt;using Microsoft.AspNet.Mvc;&lt;/p&gt;

    &lt;p&gt;namespace angularjs_aspnet_paginate.Controllers
 {
     public class HomeController : Controller {&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;      public IActionResult Index()
        {
             return View();
        }
 }  }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is ust saying when I hit the home controller load my initial Index view. We also need to add the following code to our Startup.cs Configure method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.UseMvc(routes =&amp;gt;
    {
        routes.MapRoute(
            name: &quot;default&quot;,
            template: &quot;{controller=Home}/{action=Index}/{id?}&quot;);
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can now test the application to see the intial view load.&lt;/p&gt;

&lt;h2 id=&quot;build-our-angularjs-code&quot;&gt;Build our AngularJS code.&lt;/h2&gt;

&lt;p&gt;Now open up Views/Home/Index.cshtml and build our boilerplate code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@{
    ViewData[&quot;Title&quot;] = &quot;Home Page&quot;;
}

&amp;lt;div ng-app=&quot;paginationApp&quot;&amp;gt;
    &amp;lt;div ng-controller=&quot;ItemsCtrl&quot;&amp;gt;  
        &amp;lt;li dir-paginate=&quot;item in items | itemsPerPage: itemsPerPage&quot; total-items=&quot;totalItems&quot; current-page=&quot;pagination.current&quot;&amp;gt;
            
        &amp;lt;/li&amp;gt;
        &amp;lt;dir-pagination-controls on-page-change=&quot;pageChanged(newPageNumber)&quot; template-url=&quot;lib/angularUtils-pagination/dirPagination.tpl.html&quot;&amp;gt;&amp;lt;/dir-pagination-controls&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There’s a lot in this so let me go explain:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The ViewData is a ASP.NET snippet that just sets the TItle of the page&lt;/li&gt;
  &lt;li&gt;We then bootstrap our AngularJS app with an ng-app. I will show the code for this a bit.&lt;/li&gt;
  &lt;li&gt;We then define the AngularJS controller for this page. This will control all the user actions&lt;/li&gt;
  &lt;li&gt;Then utilizing the &lt;a href=&quot;https://github.com/michaelbromley/angularUtils/tree/master/src/directives/pagination#installation&quot;&gt;dir-paginate module&lt;/a&gt;, we create something similar to an ng-repeat. For each item print our the item.Name.&lt;/li&gt;
  &lt;li&gt;We then add our dir-pagination controls.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we can add the app.js that wires all this up. Add an app folder insides the wwwroot folder. I just referenced what was created at the dir-paginate modules github page.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Bootstrap our AngularJS app:
 var paginationApp = angular.module(“paginationApp”, [“angularUtils.directives.dirPagination”]);&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Define our controller, injecting in $scope and $http:
 paginationApp.controller(‘ItemsCtrl’, function($scope, $http) {}&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set up some initial variables:
 $scope.items = [];
 $scope.totalItems = 0;
 $scope.itemsPerPage = 10;// this should match however many results your API puts on one page
 getResultsPage(1);&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Define our functions for handling the user interactions:
 	$scope.pagination = {
    current: 1
};&lt;/p&gt;

    &lt;p&gt;$scope.pageChanged = function(newPage) {
    getResultsPage(newPage);
};&lt;/p&gt;

    &lt;p&gt;function getResultsPage(pageNumber) {
    // this is just an example, in reality this stuff should be in a service
    $http.get(‘api/items?page=’ + pageNumber + ‘&amp;amp;pageSize=’ + $scope.itemsPerPage)
        .then(function(result) {
            console.log(result);
            $scope.items = result.data.Items;
            $scope.totalItems = result.data.TotalCount
        });
}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now have a working AngularJS server-side pagination with an ASP.NET API. &lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;mizrael/AngularJs-Pagination&quot;&gt;https://github.com/mizrael/AngularJs-Pagination/tree/master/DemoAngularPagination&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.asp.net/en/latest/&quot;&gt;ASP.NET Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mizrael/AngularJs-Pagination&quot;&gt;Dir-Paginate Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 Jan 2016 00:00:00 -0600</pubDate>
        <link>jacobreed.me/2016/01/12/Create-a-simple-pager-utilizing-AngularJS-dir-paginate-and-ASP.NET-5-API.html</link>
        <guid isPermaLink="true">jacobreed.me/2016/01/12/Create-a-simple-pager-utilizing-AngularJS-dir-paginate-and-ASP.NET-5-API.html</guid>
        
        
      </item>
    
      <item>
        <title>Happy Father&#39;s Day</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/post_images/IMG_1490.jpg&quot; alt=&quot;Happy Father&#39;s Day&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 21 Jun 2015 00:00:00 -0500</pubDate>
        <link>jacobreed.me/2015/06/21/Happy-Fathers-Day.html</link>
        <guid isPermaLink="true">jacobreed.me/2015/06/21/Happy-Fathers-Day.html</guid>
        
        
      </item>
    
      <item>
        <title>1 Year Ago</title>
        <description>&lt;p&gt;One year ago I wrote &lt;a href=&quot;http://jacobreed.me/2014/05/09/Dad.html&quot;&gt;this post&lt;/a&gt;, on the day my father passed away. While this past year has been one of a lot of sadness, it also has brought new challenges and achievements. I &lt;a href=&quot;http://jacobreed.me/2014/05/20/Graduation.html&quot;&gt;graduated college&lt;/a&gt;, began my career at HNI and ran the &lt;a href=&quot;http://bix7.com/2014/results/index.php?get=results&amp;amp;name=reed&amp;amp;race=2014-bix&amp;amp;submit=Search&quot;&gt;Bix 7&lt;/a&gt; for the first time. But, with the absence of my father it was difficult to make up for him not being around. As I wrote 1 year ago:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;He was Mr. Fix-It around our house. If one of our cars needed fixing he could do it. If the stove broke he would be the one we call. On top of all this, he was the one that cooked and cleaned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Trying to fill this void was difficult since I’m not the handiest person. But we always had a friend or family member there to help out whenever something needed fixed and I can’t thank them enough for this. &lt;/p&gt;

&lt;p&gt;I know my father would not want me to spend this day laying around being depressed. So instead, I want to use this post to provide resources and information about the disease that ultimately killed him. I’m hoping that someone out there can take this information and make a change in their own life, so that they don’t have to suffer from this terrible disease.&lt;/p&gt;

&lt;h2 id=&quot;what-is-melanoma&quot;&gt;What is Melanoma&lt;/h2&gt;
&lt;p&gt;Melanoma is usually a cancer of the skin but sometimes can be found in the eyes or in the mucous membranes. Many factors can lead to melanoma, including, your family history, genetics, and environmental factors. But most cases of melanoma are linked to exposure to UV light. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.melanoma.org/understand-melanoma/what-is-melanoma&quot;&gt;Melanom.org&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Research suggests that approximately 90% of melanoma cases can be linked to exposure to ultraviolet (UV) rays from natural or artificial sources, such as sunlight and indoor tanning beds. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When found early, Melanoma is a very treatable disease. But as the cancer spreads to other parts of the body, it becomes very difficult to contain. Luckily, by taking some simple precautions, it’s easy to protect yourself. &lt;/p&gt;

&lt;h2 id=&quot;how-you-can-protect-yourself&quot;&gt;How you can protect yourself&lt;/h2&gt;

&lt;p&gt;The primary way to protect yourself is to lessen your exposure to the harmful UV light. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use sunscreen whenever you will be outside for an extended period of time. The sunscreen should be at least SPF 30 or greater and should be applied generously. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It should also be reapplied approximately every 2 hours and after swimming or sweating
- Wear protective clothing like hats and UV protective shirts
- DO NOT BURN, severe sunburns increase your disk of developing skin cancer and each susceptive burn has a compounding effect on your change of developing skin cancer.
- Lastly, at all costs avoid tanning booths. Many studies have shown that tanning booths have a major effect on your chance of developing skin cancer&lt;/p&gt;

&lt;h2 id=&quot;some-key-facts&quot;&gt;Some key facts&lt;/h2&gt;

&lt;p&gt;From &lt;a href=&quot;http://www.epa.gov/sunwise/doc/ia_facts_print.pdf&quot;&gt;EPA.gov&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Between 1975–2006, the rate of new melanoma diagnoses in Iowa has more than tripled.&lt;/li&gt;
  &lt;li&gt;About 82 people in Iowa die of melanoma every year.&lt;/li&gt;
  &lt;li&gt;More people were diagnosed with skin cancer in 2009 than with breast, prostate, lung, and colon cancer combined.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.midwestmelanoma.org&quot;&gt;Midwest Melanoma Partnership&lt;/a&gt;: A brand new partnership between multiple hospitals and clinics hoping to improve the diagnosis and treatment of Melanoma.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;Melanoma Research Foundation&quot;&gt;http://www.melanoma.org&lt;/a&gt;: The leading organization dedicated to the treatment, diagnosis and education on Melanoma.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://doctormoiowa.wordpress.com&quot;&gt;Dr. Mo’s Blog&lt;/a&gt;: A medical oncologist at the Holden Comprehensive Cancer Center, Dr. Mo was a doctor of my father’s and has a truly inspiring story to tell. He also updates his blog regularly with stories on his patients and the challenges they face everyday. &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://smile.amazon.com&quot;&gt;Amazon Smile&lt;/a&gt;: A little unknown secret, once you set this up anytime you buy something Amazon 0.5% of your order will be sent to the charity of your choice. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h2&gt;

&lt;p&gt;Finally, if you want to help Melanoma research, please think about &lt;a href=&quot;http://www.melanoma.org/get-involved/support-the-mrf&quot;&gt;donating&lt;/a&gt;. Even the smallest donation can go a long way in saving someone’s life. &lt;/p&gt;

</description>
        <pubDate>Wed, 04 Feb 2015 00:00:00 -0600</pubDate>
        <link>jacobreed.me/2015/02/04/1-Year-Ago.html</link>
        <guid isPermaLink="true">jacobreed.me/2015/02/04/1-Year-Ago.html</guid>
        
        
      </item>
    
      <item>
        <title>How the Name Adidas Came To Be</title>
        <description>&lt;p&gt;Many people think that the name Adidas stands for “All Day I Dream About Sports (or Soccer)”, but that’s actually false. The actual reasoning for the name isn’t as interesting as the story behind the founder and his brother. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://latimesblogs.latimes.com/sports_blog/2010/10/sports-legend-revealed-did-adidas-get-its-name-from-the-acronym-all-day-i-dream-about-soccer.html&quot;&gt;Sports Legend Revealed: Did Adidas get its name from the acronym “All Day I Dream About Soccer”?&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The actual origin is tied to an acrimonious split between two German brothers in the wake of World War II.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The brothers had quite different personalities, with Rudolf the bombastic salesman and Adolf the quiet shoe designer. They lived together in the same house with their wives during World War II and their relationship got more and more strained. When Rudolf was drafted into the German army, he believed that Adolf had pulled strings to get Rudolf out of his hair. Later, when Rudolf was captured by American soldiers and accused of being a member of SS (the armed force of the Nazi Party), he believed that Adolf had tipped the Americans off (Rudolf was cleared of the charges).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In 1949, Adolf named his new company adidas (originally it was lowercase like that) after his nickname Adi and his last name Dassler. So Adi Dassler became adidas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rudolf did the same thing with his company name, calling his new company Ruda (Rudolf Dassler). Soon after forming Ruda, though, he changed the name of the company to Puma, which remains its name today.
test&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 03 Jan 2015 00:00:00 -0600</pubDate>
        <link>jacobreed.me/2015/01/03/How-The-Name-Adidas-Came-To-Be.html</link>
        <guid isPermaLink="true">jacobreed.me/2015/01/03/How-The-Name-Adidas-Came-To-Be.html</guid>
        
        
      </item>
    
      <item>
        <title>U.S. Cancer Deaths fall 22% since 1991</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.reuters.com/article/2014/12/31/us-cancer-casualties-idUSKBN0K918220141231&quot;&gt;U.S. cancer deaths fell 22 percent since 1991 - Reuters&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;More than 1.5 million Americans avoided death from cancer since 1991 thanks to falling smoking rates and better cancer prevention, detection and treatments, according to a study from the American Cancer Society.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a good sign that we are continuing to improve our methods for treating cancers. I think some of this can be attributed to targeted treatments like &lt;a href=&quot;http://www.wsj.com/articles/cancers-super-survivors-how-immunotherapy-is-transforming-oncology-1417714379&quot;&gt;Immunotherapy&lt;/a&gt;. These treatments work by allowing the healthy T-cells to better recognize and attack the cancer cells. They are more focused on the DNA of the cancer and its effectiveness is different with everyone. In order to be more effective we must focus on the individual. &lt;/p&gt;

&lt;p&gt;But with these more personal and targeted approaces to therapy we face an uphill battle with being able to make these therapies available to everyone no matter their income level.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Although the overall cancer death rate dropped over the past two decades, the researchers also found that not all Americans benefited equally. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Targeted therapies are expensive and not everyone has insurance that can cover these drugs. In order to continue this trend, these drugs need to be available to everyone no matter the income level.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 -0600</pubDate>
        <link>jacobreed.me/2015/01/01/US-Cancer-Deaths-fall.html</link>
        <guid isPermaLink="true">jacobreed.me/2015/01/01/US-Cancer-Deaths-fall.html</guid>
        
        
      </item>
    
      <item>
        <title>Past And Present</title>
        <description>&lt;p&gt;I usually hate these “year in review” posts but this is a great roundup on what happened in 2014 and thoughts on 2015 from Fred Wilson.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://avc.com/2014/12/what-just-happened/&quot;&gt;What Just Happened? – AVC&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;8/ we finally got rid of files. dropbox, google drive, soundcloud, spotify, netflix, hbogo, youtube, wattpad, kindle, and a host of other cloud based services finally killed off three letter filenames like mp3, mov, doc and xls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This could be the most interesting change to me in this list. Kids no longer need to worry about what type a file it is. They no longer have mp3’s on their phones, it’s just music. This really began with the introduction of the iPhone and Steve’s decision to hide the file system for the sake of simplicity. It has finally come full circle. It’ll be interesting to see how Microsoft and Apple will handle this change for the Desktop. Will they finally hide file extensions?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://avc.com/2015/01/what-is-going-to-happen/&quot;&gt;What Is Going To Happen – AVC&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;10/ cybersecurity budgets will explode in 2015 as every company, institution, and government attempts to avoid being Sony’d. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’d love to see some statistics on how much the enterprise is spending on security over the past few years. From personal experience, I know it’s the top priority for many executives. &lt;/p&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 -0600</pubDate>
        <link>jacobreed.me/2015/01/01/Past-and-Present.html</link>
        <guid isPermaLink="true">jacobreed.me/2015/01/01/Past-and-Present.html</guid>
        
        
      </item>
    
      <item>
        <title>How Verizon’s Advertising Header Works</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://webpolicy.org/2014/10/24/how-verizons-advertising-header-works/&quot;&gt;How Verizon’s Advertising Header Works&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In short, Verizon is packaging and selling subscriber information, acting as a data broker on real-time advertising exchanges.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essentially what Verizon is doing is injecting a unique identifier into each request you make. Since this being done at the application layer, there is no way for you to block it. The only thing that blocks this is by using SSL or VPN. You can check to see if you’re being injected &lt;a href=&quot;http://uidh.crud.net&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
</description>
        <pubDate>Fri, 24 Oct 2014 00:00:00 -0500</pubDate>
        <link>jacobreed.me/2014/10/24/18-34-50.html</link>
        <guid isPermaLink="true">jacobreed.me/2014/10/24/18-34-50.html</guid>
        
        
      </item>
    
      <item>
        <title>Keeping Passwords Secure</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://m.facebook.com/notes/protect-the-graph/keeping-passwords-secure/1519937431579736&quot;&gt;Keeping Passwords Secure&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our team wanted to do something to improve this situation, so we built a system dedicated to further securing people’s Facebook accounts by actively looking for these public postings, analyzing them, and then notifying people when we discover that their credentials have shown up elsewhere on the Internet. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a great idea. Rather than being reactive Facebook is being proactive in notifying their users. Hopefully we can see more companies taking these types of measures. &lt;/p&gt;
</description>
        <pubDate>Sun, 19 Oct 2014 00:00:00 -0500</pubDate>
        <link>jacobreed.me/2014/10/19/Keeping_Passwords_Secure.html</link>
        <guid isPermaLink="true">jacobreed.me/2014/10/19/Keeping_Passwords_Secure.html</guid>
        
        
      </item>
    
      <item>
        <title>How Text Messages Change from Dating to Marriage</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://adashofdata.com/2014/10/14/how-text-messages-change-from-dating-to-marriage/?utm_content=buffer80867&amp;amp;utm_medium=social&amp;amp;utm_source=facebook.com&amp;amp;utm_campaign=buffer&quot;&gt;How Text Messages Change from Dating to Marriage&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our conversations changed from “hey, what’s up?” to “ok, sounds good”. We stopped saying each other’s names in our text messages. We don’t say in “love” as much anymore. Several words stayed relatively consistent over the years though, such as “home” and “dinner”. I took a look at the actual text messages that contained these words, and found that although the terms stayed the same, the context they were used in actually changed over time.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 17 Oct 2014 00:00:00 -0500</pubDate>
        <link>jacobreed.me/2014/10/17/How-Text-Messages-Change-from-Dating-to-Marriage.html</link>
        <guid isPermaLink="true">jacobreed.me/2014/10/17/How-Text-Messages-Change-from-Dating-to-Marriage.html</guid>
        
        
      </item>
    
      <item>
        <title>Chimes - Hudson Mohawke</title>
        <description>&lt;iframe src=&quot;https://embed.spotify.com/?uri=spotify:track:1U3oH5CRRcjT5TT69b6eYl&quot; width=&quot;640&quot; height=&quot;720&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sun, 05 Oct 2014 00:00:00 -0500</pubDate>
        <link>jacobreed.me/2014/10/05/Chimes.html</link>
        <guid isPermaLink="true">jacobreed.me/2014/10/05/Chimes.html</guid>
        
        
      </item>
    
  </channel>
</rss>
